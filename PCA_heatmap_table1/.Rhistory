filter(as.logical(in_ell == FALSE)),
aes(PC1, PC2, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class")
PC1_2all +
geom_segment(PCA_loadings, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC1*8), yend=(PC2*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings$PC1*8.75), #add the tissue names to it manually
y=(PCA_loadings$PC2*8.75),
label=PCA_loadings$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C"))+
ggrepel::geom_text_repel(data = expr_logic %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC1, PC2, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Clas") +
theme_bw()
PC2_3all +
geom_segment(PCA_loadings, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC2*8), yend=(PC3*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings$PC2*8.75), #add the tissue names to it manually
y=(PCA_loadings$PC3*8.75),
label=PCA_loadings$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C"))+
ggrepel::geom_text_repel(data = expr_logic2 %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC2, PC3, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Clas") +
theme_bw()
PC1_2all +
geom_segment(PCA_loadings, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC1*8), yend=(PC2*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings$PC1*8.75), #add the tissue names to it manually
y=(PCA_loadings$PC2*8.75),
label=PCA_loadings$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C"))+
ggrepel::geom_text_repel(data = expr_logic %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC1, PC2, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
PC2_3all +
geom_segment(PCA_loadings, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC2*8), yend=(PC3*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings$PC2*8.75), #add the tissue names to it manually
y=(PCA_loadings$PC3*8.75),
label=PCA_loadings$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C"))+
ggrepel::geom_text_repel(data = expr_logic2 %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC2, PC3, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
PC3_4all +
geom_segment(PCA_loadings, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC3*8), yend=(PC4*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings$PC3*8.75), #add the tissue names to it manually
y=(PCA_loadings$PC4*8.75),
label=PCA_loadings$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C")) +
ggrepel::geom_text_repel(data = expr_logic3 %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC3, PC4, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
factoextra::fviz_eig(pca2, "Principal components variance for the 7 tissues")
factoextra::fviz_eig(pca2, main = "Principal components variance for the 7 tissues")
ggbiplot::ggbiplot(pca2, obs.scale = 1, var.scale = .5, choices = c(1, 2),
varname.adjust = 3,
groups = Family, var.axes = F, varname.size = 2,
ellipse = TRUE,  circle = FALSE, ellipse.prob = .70) +
geom_segment(PCA_loadings2, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC1*8), yend=(PC2*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings2$PC1*8.75), #add the tissue names to it manually
y=(PCA_loadings2$PC2*8.75),
label=PCA_loadings2$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C")) +
ggrepel::geom_text_repel(data = expr_logical %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC1, PC2, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
PC2_3tissues +
geom_segment(PCA_loadings2, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC2*7), yend=(PC3*7)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings2$PC2*7.2), #add the tissue names to it manually
y=(PCA_loadings2$PC3*7.2),
label=PCA_loadings2$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C")) +
ggrepel::geom_text_repel(data = expr_logical2 %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC2, PC3, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
PC3_4tissues +
geom_segment(PCA_loadings2, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC3*8), yend=(PC4*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings2$PC3*8.75), #add the tissue names to it manually
y=(PCA_loadings2$PC4*8.75),
label=PCA_loadings2$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C")) +
ggrepel::geom_text_repel(data = expr_logical3 %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC3, PC4, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(heatmaply)
library(magrittr) #for lots of pipes
library(ggplot2)
library(pheatmap)
library(devtools)
library(ggrepel)
library(sp)
PC1_2all +
geom_segment(PCA_loadings, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC1*8), yend=(PC2*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings$PC1*8.75), #add the tissue names to it manually
y=(PCA_loadings$PC2*8.75),
label=PCA_loadings$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C"))+
ggrepel::geom_text_repel(data = expr_logic %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC1, PC2, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
ggsave("20230927_PC1_2_allTissues.png", dpi = 1000, width = 7, height = 6)
ggsave("20230927_PC1_2_allTissues.png", dpi = 1000, width = 10, height = 7)
PC1_2all +
geom_segment(PCA_loadings, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC1*8), yend=(PC2*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings$PC1*9.75), #add the tissue names to it manually
y=(PCA_loadings$PC2*9.75),
label=PCA_loadings$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C"))+
ggrepel::geom_text_repel(data = expr_logic %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC1, PC2, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
ggsave("20230927_PC1_2_allTissues.png", dpi = 1000, width = 10, height = 9)
PC1_2all +
geom_segment(PCA_loadings, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC1*8.75), yend=(PC2*8.75)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings$PC1*8.75), #add the tissue names to it manually
y=(PCA_loadings$PC2*8.75),
label=PCA_loadings$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C"))+
ggrepel::geom_text_repel(data = expr_logic %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC1, PC2, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
ggsave("20230927_PC1_2_allTissues.png", dpi = 1000, width = 10, height = 6)
ggsave("20230927_PC1_2_allTissues.png", dpi = 1000, width = 10, height = 8)
ggsave("20230927_PC1_2_allTissues.pdf", dpi = 1000, width = 10, height = 8)
PC2_3all +
geom_segment(PCA_loadings, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC2*8), yend=(PC3*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings$PC2*8.75), #add the tissue names to it manually
y=(PCA_loadings$PC3*8.75),
label=PCA_loadings$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C"))+
ggrepel::geom_text_repel(data = expr_logic2 %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC2, PC3, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
ggsave("20230927_PC2_3_allTissues.png", dpi = 1000, width = 10, height = 8)
ggsave("20230927_PC2_3_allTissues.pdf", dpi = 1000, width = 10, height = 8)
PC3_4all +
geom_segment(PCA_loadings, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC3*8), yend=(PC4*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings$PC3*8.75), #add the tissue names to it manually
y=(PCA_loadings$PC4*8.75),
label=PCA_loadings$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C")) +
ggrepel::geom_text_repel(data = expr_logic3 %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC3, PC4, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
ggsave("20230927_PC3_4_allTissues.png", dpi = 1000, width = 10, height = 8)
ggsave("20230927_PC3_4_allTissues.pdf", dpi = 1000, width = 10, height = 8)
factoextra::fviz_eig(pca2, main = "Principal components variance for the 7 tissues")
factoextra::fviz_eig(pca2, main = "Principal components variance for the 7 tissues")
ggsave("20230927_PCscreePlot_7Tissues.png", dpi = 1000, width = 10, height = 8)
ggbiplot::ggbiplot(pca2, obs.scale = 1, var.scale = .5, choices = c(1, 2),
varname.adjust = 3,
groups = Family, var.axes = F, varname.size = 2,
ellipse = TRUE,  circle = FALSE, ellipse.prob = .70) +
geom_segment(PCA_loadings2, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC1*8), yend=(PC2*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings2$PC1*8.75), #add the tissue names to it manually
y=(PCA_loadings2$PC2*8.75),
label=PCA_loadings2$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C")) +
ggrepel::geom_text_repel(data = expr_logical %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC1, PC2, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
ggsave("20230927_PC1_2_7Tissues.png", dpi = 1000, width = 10, height = 8)
ggsave("20230927_PC1_2_7Tissues.pdf", dpi = 1000, width = 10, height = 8)
PC2_3tissues +
geom_segment(PCA_loadings2, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC2*7), yend=(PC3*7)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings2$PC2*7.2), #add the tissue names to it manually
y=(PCA_loadings2$PC3*7.2),
label=PCA_loadings2$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C")) +
ggrepel::geom_text_repel(data = expr_logical2 %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC2, PC3, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
ggsave("20230927_PC2_3_7Tissues.png", dpi = 1000, width = 10, height = 8)
ggsave("20230927_PC2_3_7Tissues.pdf", dpi = 1000, width = 10, height = 8)
PC3_4tissues +
geom_segment(PCA_loadings2, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC3*8), yend=(PC4*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings2$PC3*8.75), #add the tissue names to it manually
y=(PCA_loadings2$PC4*8.75),
label=PCA_loadings2$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C")) +
ggrepel::geom_text_repel(data = expr_logical3 %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC3, PC4, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
ggsave("20230927_PC3_4_7Tissues.png", dpi = 1000, width = 10, height = 8)
ggsave("20230927_PC3_4_7Tissues.pdf", dpi = 1000, width = 10, height = 8)
factoextra::fviz_eig(pca, main = "Principal component variances of the 14 tissues")
ggsave("20230927_PCscreePlot_allTissues.png", dpi = 1000, width = 10, height = 8)
factoextra::fviz_eig(pca, main = "Principal component variances of the 14 tissues")
PC1_2all +
geom_segment(PCA_loadings, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC1*8.75), yend=(PC2*8.75)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings$PC1*8.75), #add the tissue names to it manually
y=(PCA_loadings$PC2*8.75),
label=PCA_loadings$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C"))+
ggrepel::geom_text_repel(data = expr_logic %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC1, PC2, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
PC2_3all +
geom_segment(PCA_loadings, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC2*8), yend=(PC3*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings$PC2*8.75), #add the tissue names to it manually
y=(PCA_loadings$PC3*8.75),
label=PCA_loadings$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C"))+
ggrepel::geom_text_repel(data = expr_logic2 %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC2, PC3, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
PC3_4all +
geom_segment(PCA_loadings, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC3*8), yend=(PC4*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings$PC3*8.75), #add the tissue names to it manually
y=(PCA_loadings$PC4*8.75),
label=PCA_loadings$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C")) +
ggrepel::geom_text_repel(data = expr_logic3 %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC3, PC4, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
ggbiplot::ggbiplot(pca2, obs.scale = 1, var.scale = .5, choices = c(1, 2),
varname.adjust = 3,
groups = Family, var.axes = F, varname.size = 2,
ellipse = TRUE,  circle = FALSE, ellipse.prob = .70) +
geom_segment(PCA_loadings2, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC1*8), yend=(PC2*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings2$PC1*8.75), #add the tissue names to it manually
y=(PCA_loadings2$PC2*8.75),
label=PCA_loadings2$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C")) +
ggrepel::geom_text_repel(data = expr_logical %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC1, PC2, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
PC2_3tissues +
geom_segment(PCA_loadings2, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC2*7), yend=(PC3*7)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings2$PC2*7.2), #add the tissue names to it manually
y=(PCA_loadings2$PC3*7.2),
label=PCA_loadings2$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C")) +
ggrepel::geom_text_repel(data = expr_logical2 %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC2, PC3, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
PC3_4tissues +
geom_segment(PCA_loadings2, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC3*8), yend=(PC4*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings2$PC3*8.75), #add the tissue names to it manually
y=(PCA_loadings2$PC4*8.75),
label=PCA_loadings2$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C")) +
ggrepel::geom_text_repel(data = expr_logical3 %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC3, PC4, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
PC1_2all +
geom_segment(PCA_loadings, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC1*8.75), yend=(PC2*8.75)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings$PC1*8.75), #add the tissue names to it manually
y=(PCA_loadings$PC2*8.75),
label=PCA_loadings$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C"))+
ggrepel::geom_text_repel(data = expr_logic %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC1, PC2, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
PC1_2all +
geom_segment(PCA_loadings, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC1*8.75), yend=(PC2*8.75)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings$PC1*8.75), #add the tissue names to it manually
y=(PCA_loadings$PC2*8.75),
label=PCA_loadings$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C"))+
ggrepel::geom_text_repel(data = expr_logic %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC1, PC2, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
ggbiplot::ggbiplot(pca2, obs.scale = 1, var.scale = .5, choices = c(1, 2),
varname.adjust = 3,
groups = Family, var.axes = F, varname.size = 2,
ellipse = TRUE,  circle = FALSE, ellipse.prob = .70) +
geom_segment(PCA_loadings2, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC1*8), yend=(PC2*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings2$PC1*8.75), #add the tissue names to it manually
y=(PCA_loadings2$PC2*8.75),
label=PCA_loadings2$Variables, size=4, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+
theme_bw()+
scale_color_manual(values=c("#86C5D8", "#620093", "#E7C94C")) +
ggrepel::geom_text_repel(data = expr_logical %>%
as_tibble(rownames = "name") %>%
filter(as.logical(in_ell == FALSE)),
aes(PC1, PC2, label=sub(".*\\|", "", heatmap_label)),
size=3, max.overlaps = 100,  min.segment.length = 0,
segment.curvature = -0.1) +
labs(color = "Class") +
theme_bw()
citation("r1001genomes")
citation("ggplot2")
citation("prcomp")
citation("prcomp")
library(prcomp)
install.packages("prcomp")
citation("prcomp")
?prcomp
citation("stats")
citation("ggbiplot")
devtools::install_github('wrightrc/r1001genomes')
citation("r1001genomes")
