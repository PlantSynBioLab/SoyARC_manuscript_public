head(expr_2high_clusters_long)
expr_2high_clusters_wide <- spread(expr_2high_clusters_long, names, TPM)
expr_2high_clusters_wide
# maybe select only AFBs
# AFB_expr <- data_expr_4pca[grep(c("GmAFB|GmTIR"), data_expr_4pca$Family),]
pca_data <- ALLdata_expr_4pca[, c(1,6:10, 12, 19)] %>% column_to_rownames(., "ortholog_name")
expr_pca <- prcomp(pca_data, scale = TRUE)
summary(expr_pca)
plot(expr_pca, col="#E5F5F9")
plot(expr_pca, type="l", col="#FFC600")
biplot(expr_pca, scale = 1)
# Extract scores
head(str(expr_pca))
head(expr_pca$x) #or the principal component scores for each observation.
# We can retrieve this x values for both PC1 and PC2 which are the PCs that accounts for most of the variation in the data and attach them to our expression data to make a better visualization
expr_data2 <- cbind(ALLdata_expr_4pca[, c(1,6:10, 12,15, 16,17,19,18)], expr_pca$x[, 1:3])
head(expr_data2)
Class <- data_expr_4pca$Class
ggplot(expr_data2, aes(PC1, PC2, col=Class, fill=Class)) +
stat_ellipse(geom = "polygon", col="black", alpha=.5,)+
geom_point(shape=21, col="black", alpha=.5) + theme_bw()
# extract the loading so we can change the arrows more easily
PCA_loadings <- data.frame(Variables=rownames(expr_pca$rotation), expr_pca$rotation)
(PC1_2 <- ggbiplot::ggbiplot(expr_pca, obs.scale = 1, var.scale = .5,
varname.adjust = 3,
groups = Class, var.axes = F, varname.size = 2,
ellipse = TRUE,  circle = FALSE) +
geom_segment(PCA_loadings, mapping=aes(x=0, y=0, # Change the size of arrows
xend=(PC1*8), yend=(PC2*8)),
arrow = arrow(length = unit(1/2, "picas")), color="gray60") +
annotate("text", x=(PCA_loadings$PC1*8.75), #add the tissue names to it manually
y=(PCA_loadings$PC2*8.75),
label=PCA_loadings$Variables, size=2, color="gray60", fontface="bold") +
theme(panel.background = element_rect(fill = "white", linewidth = 1))+ theme_bw()+
scale_color_manual(values=c("#620093", "#E7C94C", "#86C5D8"))
)
PC1_2 + ggrepel::geom_text_repel(data = expr_logical %>%
#as_tibble(rownames = "name")%>%
filter(in.ell_TIR), aes(PC1, PC2, label=ortholog_name), size=2, max.overlaps = 20,
min.segment.length = 0, segment.curvature = -0.1) + theme_test()
PC1_2 + ggrepel::geom_text_repel(data = expr_logical %>%
#as_tibble(rownames = "name")%>%
filter(in.ell_TIR), aes(PC1, PC2, label=ortholog_name), size=2, max.overlaps = 20,
min.segment.length = 0, segment.curvature = -0.1) + theme_test()
ggsave("Figure_PC1_2_Work_allTranscripts_outside_68_TIRellipse.pdf", width = 12, height = 12)
tree <- treeio::read.mrbayes(file = "mb_results_mult_final/IAAmult_final5.nex.con.tre")
setwd("~/GitHub/SoyArcs_manuscript/final_trees/IAA_input")
tree <- treeio::read.mrbayes(file = "mb_results_mult_final/IAAmult_final5.nex.con.tre")
g_tree <- ggtree(tree, layout="circular", branch.length = 'prob') + geom_tiplab(size=3, align = T)
library(ggtree)
g_tree <- ggtree(tree, layout="circular", branch.length = 'prob') + geom_tiplab(size=3, align = T)
g_tree
# change tips according to Arabidopsis classification
names <- as.data.frame(tree@phylo[["tip.label"]])
View(names)
IDs <- readxl::read_xlsx("../../Gm_GeneIDs.xlsx", sheet = "At_IAA")
View(IDs)
str_remove(tree@phylo[["tip.label"]], ".*./"))
str_remove(tree@phylo[["tip.label"]], ".*./")
str_remove(tree@phylo[["tip.label"]], ".*/")
str_remove(tree@phylo[["tip.label"]], "/.*")
tree@phylo[["tip.label"]] %>% select(contains(match = "AT" ))
select(tree@phylo[["tip.label"]], contains(match = "AT" ))
select(`tree@phylo[["tip.label"]]`, contains(match = "AT" ))
filter(str_detect(`tree@phylo[["tip.label"]]`, "AT")
)
filter(str_detect(`tree@phylo[["tip.label"]]`, "AT"))
tree <- treeio::read.mrbayes(file = "mb_results_mult_final/IAAmult_final5.nex.con.tre")
View(tree)
tree@phylo[["tip.label"]]
filter(str_detect(`tree@phylo[["tip.label"]]`, "AT"))
filter(str_detect(tree@phylo[["tip.label"]], "AT"))
filter(str_detect(tree@phylo[[2]], "AT"))
tree@phylo[["tip.label"]] %>% filter(str_detect(., "AT"))
as.lits(tree@phylo[["tip.label"]]) %>% filter(str_detect(., "AT"))
as.list(tree@phylo[["tip.label"]]) %>% filter(str_detect(., "AT"))
as.list(tree@phylo[["tip.label"]]) %>% rename(., "AT", ".7*")
as.list(tree@phylo[["tip.label"]]) %>% rename(., "AT", "./.*")
as.list(tree@phylo[["tip.label"]]) %>% str_remove(., "AT", "./.*")
as.list(tree@phylo[["tip.label"]]) %>% str_remove(., "AT", "/.*")
as.list(tree@phylo[["tip.label"]]) %>% str_remove(., "AT", ".*/")
tree@phylo[["tip.label"]] %>% str_detect(., "AT")
tree@phylo[["tip.label"]] %>% str_detect(., "AT") %>%  str_remove(., ".[.]")
tree@phylo[["tip.label"]] %>% select(., "AT") %>%  str_remove(., ".[.]")
tree@phylo[["tip.label"]] %>% str_match(., "AT") %>%  str_remove(., ".[.]")
tree@phylo[["tip.label"]] %>% filter(., "AT") %>%  str_remove(., ".[.]")
tree@phylo[["tip.label"]] %>% match(., "AT") %>%  str_remove(., ".[.]")
tree@phylo[["tip.label"]] %>% str_conv(., "AT") %>%  str_remove(., ".[.]")
tree@phylo[["tip.label"]] %>% str_match(., "AT") %>%  str_remove(., ".[.]")
tree@phylo[["tip.label"]] %>%  str_remove(., "AT.*[.0-9]")
tree@phylo[["tip.label"]] %>%  str_remove(., "AT.*([.0-9])")
tree@phylo[["tip.label"]] %>%  str_remove(., "([.0-9]AT.*")
tree@phylo[["tip.label"]] %>%  str_remove(., "AT.*([.0-9]$")
tree@phylo[["tip.label"]] %>%  str_remove(., "AT.*[.0-9]$")
tree@phylo[["tip.label"]] %>%  str_remove(., "AT.*([.0-9])$")
names %>% filter(., "AT")
names$`tree@phylo[["tip.label"]]` %>% filter(., "AT")
names$`tree@phylo[["tip.label"]]` %>% filter(., "AT.*")
names$`tree@phylo[["tip.label"]]` %>% filter(., grepl("AT"))
names$`tree@phylo[["tip.label"]]` %>% grepl(., "AT")
names$`tree@phylo[["tip.label"]]` %>% grepl("AT", .)
names$`tree@phylo[["tip.label"]]` %>% filter(grepl("AT", .))
names$`tree@phylo[["tip.label"]]` %>% grepl("AT", .) %>% str_remove_all(., ".*/")
names$`tree@phylo[["tip.label"]]` %>% grepl("AT", .) %>% str_remove_all(., "\\.[^.]*$")
names$`tree@phylo[["tip.label"]]` %>% filter("AT", .) %>% str_remove_all(., "\\.[^.]*$")
names$`tree@phylo[["tip.label"]]`[names$`tree@phylo[["tip.label"]]` %in%] "AT" %>% str_remove_all(., "\\.[^.]*$")
names$`tree@phylo[["tip.label"]]`[names$`tree@phylo[["tip.label"]]` %in% "AT"] %>% str_remove_all(., "\\.[^.]*$")
names$`tree@phylo[["tip.label"]]` %>% str_subset(., "AT") %>% str_remove_all(., "\\.[^.]*$")
tree@phylo[["tip.label"]]  %>% str_subset(., "AT") %>% str_remove_all(., "\\.[^.]*$")
tree@phylo[["tip.label"]] <- tree@phylo[["tip.label"]]  %>% str_subset(., "AT") %>% str_remove_all(., "\\.[^.]*$")
tree@phylo[["tip.label"]]
tree@phylo[["tip.label"]] %>% tree@phylo[["tip.label"]] = case_when(tree@phylo[["tip.label"]] =="AT" ~ "\\.[^.]*$")
tree@phylo[["tip.label"]] %>% tree@phylo[["tip.label"]] =
case_when(tree@phylo[["tip.label"]] =="AT" ~ "\\.[^.]*$")
ifelse(str_subset(tree@phylo[["tip.label"]], "AT"), "\\.[^.]*$", tree@phylo[["tip.label"]])
ifelse(tree@phylo[["tip.label"]], "AT", "\\.[^.]*$", tree@phylo[["tip.label"]])
ifelse(`tree@phylo[["tip.label"]]`, "AT", "\\.[^.]*$", `tree@phylo[["tip.label"]]`)
tree@phylo[["tip.label"]] <- tree@phylo[["tip.label"]]  %>% str_which(., "AT") %>% str_remove_all(., "\\.[^.]*$")
tree@phylo[["tip.label"]]
tree <- treeio::read.mrbayes(file = "mb_results_mult_final/IAAmult_final5.nex.con.tre")
tree@phylo[["tip.label"]]  %>% str_which(., "AT") %>% str_remove_all(., "\\.[^.]*$")
tree@phylo[["tip.label"]]  %>% which(., "AT") %>% str_remove_all(., "\\.[^.]*$")
tree@phylo[["tip.label"]]  %>% which(str_remove_all(., "\\.[^.]*$"), "AT")
tree@phylo[["tip.label"]]  %>% which(., "AT") %>% str_remove_all(which(., == "AT"), "\\.[^.]*$")
tree@phylo[["tip.label"]]  %>% which(., "AT") %>% str_remove_all(which(., = "AT"), "\\.[^.]*$")
tree@phylo[["tip.label"]]  %>% which(str_remove_all(., "AT", "\\.[^.]*$")
tree@phylo[["tip.label"]]  %>% which(str_remove_all(., "AT", "\\.[^.]*$"))
# change tips according to Arabidopsis classification
names <- as.data.frame(tree@phylo[["tip.label"]])
names$tree@phylo[["tip.label"]]  %>% which(str_remove_all(., "AT", "\\.[^.]*$"))
names$tree@phylo[["tip.label"]]  %>% mutate(Tip_label == str_remove_all(., "AT", "\\.[^.]*$"))
# We want to join annotated A. thaliana gene IDs with tip trees, and duplicate those who are not classified such as all the other species.
IDs$tair_locus <-  paste0(IDs$tair_locus, ".1")
TipLabel <- merge(x=names, y=IDs, by.x='tree@phylo[["tip.label"]]', by.y="tair_locus", all.x=T)
View(TipLabel)
IDs <- readxl::read_xlsx("../../Gm_GeneIDs.xlsx", sheet = "At_IAA")
mutate(tair_locus = str_remove_all(names$`tree@phylo[["tip.label"]]`, "\\.[^.]*$"))
names %>% mutate(tair_locus = str_remove_all(.$`tree@phylo[["tip.label"]]`, "\\.[^.]*$"))
names2 <- names %>% mutate(tair_locus = str_remove_all(.$`tree@phylo[["tip.label"]]`, "\\.[^.]*$"))
TipLabel <- merge(x=names2, y=IDs, all.x=T)
TipLabel %>% dplyr::select(`tree@phylo[["tip.label"]]`, name, class) %>%
dplyr::rename(., tair_locus =`tree@phylo[["tip.label"]]`)
TipLabel[,-1] %>% dplyr::select(`tree@phylo[["tip.label"]]`, name, class) %>%
dplyr::rename(., tair_locus =`tree@phylo[["tip.label"]]`)
tipLabel <- TipLabel[,-1] %>% dplyr::select(`tree@phylo[["tip.label"]]`, name, class) %>%
dplyr::rename(., tair_locus =`tree@phylo[["tip.label"]]`)
tipLabel <- within(tipLabel, name[is.na(name)] <- tair_locus[is.na(name)])
View(TipLabel)
View(tipLabel)
ggtree(tree, layout="circular", branch.length = 'prob') + geom_tiplab(size=3, align = T)
# Colour *Malus domestica* genes
IDs <- tipLabel %>%
dplyr::select(tair_locus, name, class) %>%
dplyr::mutate( Species = tair_locus )
IDs$Species <- IDs$Species %>%
gsub("^AT(.*)", "A. thaliana", .) %>%
gsub("^Medtr(.*)", "M. truncatula", .)  %>%
gsub("^Glyma(.*)", "G. max", .) %>% gsub("^Glyso(.*)", "G. soja", .) %>%
gsub("^Lj(.*)", "L. japonicus", .)
# write_csv(IDs, "IAA_Tip_Label2.csv")
# IDs <-read_csv("IAA_Tip_Label.csv") # Some transcripts number ".2 .1 .4 and so on" are different and I manually edited those that were.
#change tree tip.label
tree@phylo[["tip.label"]] <- IDs[[2]][match(tree@phylo[["tip.label"]], IDs[[1]])]
tipLabel <- IDs[,-1]
p <- ggtree(tree, layout="circular",  color = "darkgrey",
branch.length='prob', ladderize = TRUE) +
scale_x_continuous(expand = c(0, 1.2)) +
geom_nodelab(mapping = aes(label=round(
as.numeric(prob), digits = 2), fontface=2),
nudge_x = -.1, nudge_y = .1, hjust = -.05, size = 1.5)
p
(p2 <- p %<+% tipLabel +
geom_tippoint(aes(fill=factor(Species)),
size=3.5, shape=21) + geom_tiplab( size=3, hjust=-.1, align = T) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species"))
)
(p2 <- p %<+% tipLabel +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + geom_tiplab( size=2.5, hjust=-.01) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species"))
)
ggsave("figures/IAA_colored.pdf", width = 17, height = 17)
tipLabel <- tipLabel %>%
dplyr::mutate(tip_color = ifelse(str_detect(name, "At", negate = TRUE), "TO_not", name))
tipLabel2 <- tipLabel %>%
mutate(tip_color = ifelse(str_detect(tip_color, "At", negate = FALSE), "TO_color", tip_color))
# I have also all IDs classified according to tree
IAA_Classes <- readxl::read_xlsx("IAA_Classes.xlsx")
tipLabel3 <- left_join(tipLabel2, IAA_Classes, by="name")
tipLabel2 <- within(tipLabel3, class[is.na(class)] <- IAA_Class[is.na(class)])
tipLabel2 <- tipLabel2[,-5]
tipLabel2 <- tipLabel2 %>% dplyr::select(., name,  Class = class, Species, tip_color)
p %<+% tipLabel2 +
geom_tiplab(aes(color = factor(tip_color)), size=3, hjust=-.15) +
scale_color_manual(values = c("red", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=4.2, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
#without tips aligned
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.15, fontface=2) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.15) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
# add node number so we can label the classes within IAAs
ggtree(tree, layout="circular",  color = "darkgrey",
branch.length='prob', ladderize = TRUE) + geom_tiplab(align = T)+
geom_text(aes(label=node), size=2, hjust=-.3, color="red", fontface=2) +
scale_x_continuous(expand = c(0, 1.2)) +
geom_nodelab(mapping = aes(label=round(
as.numeric(prob), digits = 2), fontface=2),
nudge_x = -.1, nudge_y = .1, hjust = -.05, size = 1.5)
ggsave("figures/IAA_tree_with_node_numbers.pdf",  height = 13, width = 15)
# Tree with aligned tips
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
# Now I will also add the IAAs class
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
(p3 <- p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
#scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic")))
p4 <- p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
p4 + scale_colour_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442'))
ggsave("figures/IAA_colored_tree_final2.pdf", height = 13, width = 15, dpi = 800)
ggsave("figures/IAA_colored_tree_final2.png", height = 13, width = 15, dpi = 800)
p4 + scale_colour_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) +
scale_colour_discrete(na.translate = F)
p4 <- p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3) +
guides(fill=guide_legend(title="Species"), na.translate = F) + theme(legend.position = c(1,0.1)) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
p4
p4 <- p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
p4
# Tree with aligned tips
p %<+% !is.na(tipLabel2) +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
# Now I will also add the IAAs class
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
(p3 <- p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
#scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic")))
p3
p4 <- p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
p4 + scale_colour_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442'))
p4 <- p %<+% !is.na(tipLabel2) +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
p4 + scale_colour_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442'))
p4 <- filter(p %<+% !is.na(tipLabel2)) +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
# Tree with aligned tips
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
tipLabel2 %>% filter(!is.na(dplyr::select(., name,  Class = class, Species, tip_color)))
tipLabel2 <- tipLabel2 %>% (dplyr::select(., name,  !is.na(Class = class), Species, tip_color))
tipLabel2
tipLabel2 <- within(tipLabel3, class[is.na(class)] <- IAA_Class[!is.na(class)])
tipLabel2 <- tipLabel2[,-5]
tipLabel2 <- tipLabel2 %>% (dplyr::select(., name,  Class = class, Species, tip_color))
p %<+% tipLabel2 +
geom_tiplab(aes(color = factor(tip_color)), size=3, hjust=-.15) +
scale_color_manual(values = c("red", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=4.2, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
#without tips aligned
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.15, fontface=2) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.15) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
# add node number so we can label the classes within IAAs
ggtree(tree, layout="circular",  color = "darkgrey",
branch.length='prob', ladderize = TRUE) + geom_tiplab(align = T)+
geom_text(aes(label=node), size=2, hjust=-.3, color="red", fontface=2) +
scale_x_continuous(expand = c(0, 1.2)) +
geom_nodelab(mapping = aes(label=round(
as.numeric(prob), digits = 2), fontface=2),
nudge_x = -.1, nudge_y = .1, hjust = -.05, size = 1.5)
ggsave("figures/IAA_tree_with_node_numbers.pdf",  height = 13, width = 15)
# Tree with aligned tips
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
# Now I will also add the IAAs class
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
(p3 <- p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
#scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic")))
p4 <- p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
p4 + scale_colour_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442'))
p4
IAA_Class
tree <- treeio::read.mrbayes(file = "mb_results_mult_final/IAAmult_final5.nex.con.tre")
g_tree <- ggtree(tree, layout="circular", branch.length = 'prob') + geom_tiplab(size=3, align = T)
g_tree
# change tips according to Arabidopsis classification
names <- as.data.frame(tree@phylo[["tip.label"]])
names2 <- names %>% mutate(tair_locus = str_remove_all(.$`tree@phylo[["tip.label"]]`, "\\.[^.]*$"))
IDs <- readxl::read_xlsx("../../Gm_GeneIDs.xlsx", sheet = "At_IAA")
IDs
# We want to join annotated A. thaliana gene IDs with tip trees, and duplicate those who are not classified such as all the other species.
IDs$tair_locus <-  paste0(IDs$tair_locus, ".1")
TipLabel <- merge(x=names2, y=IDs, all.x=T)
tipLabel <- TipLabel[,-1] %>% dplyr::select(`tree@phylo[["tip.label"]]`, name, class) %>%
dplyr::rename(., tair_locus =`tree@phylo[["tip.label"]]`)
tipLabel <- within(tipLabel, name[is.na(name)] <- tair_locus[is.na(name)])
ggtree(tree, layout="circular", branch.length = 'prob') + geom_tiplab(size=3, align = T)
# Colour *Malus domestica* genes
IDs <- tipLabel %>%
dplyr::select(tair_locus, name, class) %>%
dplyr::mutate( Species = tair_locus )
IDs$Species <- IDs$Species %>%
gsub("^AT(.*)", "A. thaliana", .) %>%
gsub("^Medtr(.*)", "M. truncatula", .)  %>%
gsub("^Glyma(.*)", "G. max", .) %>% gsub("^Glyso(.*)", "G. soja", .) %>%
gsub("^Lj(.*)", "L. japonicus", .)
# write_csv(IDs, "IAA_Tip_Label2.csv")
# IDs <-read_csv("IAA_Tip_Label.csv") # Some transcripts number ".2 .1 .4 and so on" are different and I manually edited those that were.
#change tree tip.label
tree@phylo[["tip.label"]] <- IDs[[2]][match(tree@phylo[["tip.label"]], IDs[[1]])]
tipLabel <- IDs[,-1]
p <- ggtree(tree, layout="circular",  color = "darkgrey",
branch.length='prob', ladderize = TRUE) +
scale_x_continuous(expand = c(0, 1.2)) +
geom_nodelab(mapping = aes(label=round(
as.numeric(prob), digits = 2), fontface=2),
nudge_x = -.1, nudge_y = .1, hjust = -.05, size = 1.5)
p
(p2 <- filter(p %<+% !is.na(tipLabel)) +
geom_tippoint(aes(fill=factor(Species)),
size=3.5, shape=21) + geom_tiplab( size=3, hjust=-.1, align = T) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species"))
)
(p2 <- p %<+% filter(!is.na(tipLabel)) +
geom_tippoint(aes(fill=factor(Species)),
size=3.5, shape=21) + geom_tiplab( size=3, hjust=-.1, align = T) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species"))
)
View(tipLabel3)
tipLabel2 <- within(tipLabel3, class[!is.na(class)] <- IAA_Class[!is.na(class)])
View(tipLabel2)
tipLabel2 <- within(tipLabel3, class[is.na(class)] <- IAA_Class[is.na(class)])
tipLabel2 <- tipLabel2[,-5]
tipLabel2 <- tipLabel2 %>% (dplyr::select(., name,  Class = class, Species, tip_color))
p %<+% tipLabel2 +
geom_tiplab(aes(color = factor(tip_color)), size=3, hjust=-.15) +
scale_color_manual(values = c("red", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=4.2, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
#without tips aligned
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.15, fontface=2) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.15) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
# add node number so we can label the classes within IAAs
ggtree(tree, layout="circular",  color = "darkgrey",
branch.length='prob', ladderize = TRUE) + geom_tiplab(align = T)+
geom_text(aes(label=node), size=2, hjust=-.3, color="red", fontface=2) +
scale_x_continuous(expand = c(0, 1.2)) +
geom_nodelab(mapping = aes(label=round(
as.numeric(prob), digits = 2), fontface=2),
nudge_x = -.1, nudge_y = .1, hjust = -.05, size = 1.5)
ggsave("figures/IAA_tree_with_node_numbers.pdf",  height = 13, width = 15)
# Tree with aligned tips
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
# Now I will also add the IAAs class
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
(p3 <- p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
#scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic")))
p4 <- p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
p4 + scale_colour_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442'))
