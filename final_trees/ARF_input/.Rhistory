scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic"))
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
#scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_point(aes( color=Species, shape=`class`)) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic"))
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
#scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_point(aes( color=Species, shape=`class`)) +
scale_color_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic"))
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
#scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_point(aes( color=Species, shape=`class`), size=5) +
scale_color_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic"))
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
#scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_point(aes( color=Species, shape=`class`), size=3) +
scale_color_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic"))
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
#scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_point(aes( color=Species, shape=`class`), size=3, na.rm=TRUE) +
scale_color_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic"))
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T, na.rm=TRUE) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T, na.rm=TRUE) +
geom_point(aes( color=Species, shape=`class`), size=3, na.rm=TRUE) +
scale_color_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442'), na.rm=TRUE) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic"))
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T, na.rm=TRUE) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T, na.rm=TRUE) +
geom_point(aes( color=Species, shape=`class`), size=3, na.rm=TRUE) +
scale_color_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic"))
tipLabel2
View(tipLabel2)
tipLabel2
tipLabel2 %>% rename(., class = Class)
tipLabel2 %>% rename(., Class = class)
tipLabel2
tipLabel2 %>% select(., name,  Class = class, Species, tip_color)
tipLabel2 %>% dplyr::select(., name,  Class = class, Species, tip_color)
tipLabel2 <- tipLabel2 %>% dplyr::select(., name,  Class = class, Species, tip_color)
p %<+% tipLabel2 +
geom_tiplab(aes(color = factor(tip_color)), size=3, hjust=-.15) +
scale_color_manual(values = c("red", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=4.2, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
#without tips aligned
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.15, fontface=2) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.15) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
# add node number so we can label the classes within IAAs
ggtree(tree, layout="circular",  color = "darkgrey",
branch.length='prob', ladderize = TRUE) + geom_tiplab(align = T)+
geom_text(aes(label=node), size=2, hjust=-.3, color="red", fontface=2) +
scale_x_continuous(expand = c(0, 1.2)) +
geom_nodelab(mapping = aes(label=round(
as.numeric(prob), digits = 2), fontface=2),
nudge_x = -.1, nudge_y = .1, hjust = -.05, size = 1.5)
ggsave("figures/IAA_tree_with_node_numbers.pdf",  height = 13, width = 15)
# Tree with aligned tips
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
# Now I will also add the IAAs class
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
(p3 <- p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
#scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic")))
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T, na.rm=TRUE)
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=`class`), size=3, na.rm=TRUE) +
scale_color_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic"))
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3, na.rm=TRUE) +
scale_color_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic"))
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3, na.rm=TRUE) +
scale_color_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.25)) + theme(legend.text = element_text(face = "italic"))
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3, na.rm=TRUE) +
scale_color_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1.2,0.25)) + theme(legend.text = element_text(face = "italic"))
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3, na.rm=TRUE) +
scale_color_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1.1,0.25)) + theme(legend.text = element_text(face = "italic"))
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3, na.rm=TRUE) +
scale_color_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1.1,0.2)) + theme(legend.text = element_text(face = "italic"))
ggsave("figures/IAA_colored_tree_final.pdf", height = 13, width = 15)
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3, na.rm=TRUE) +
scale_color_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic"))
ggsave("figures/IAA_colored_tree_final.pdf", height = 13, width = 15)
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3, na.rm=TRUE) +
scale_color_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) +
guides(fill=guide_legend(title="Species"), na.rm=T) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic"))
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3) +
scale_color_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic"))
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class, na.rm=TRUE), size=3) +
scale_color_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic"))
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3) +
scale_color_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic")) +scale_colour_discrete(na.translate = F)
ggsave("figures/IAA_colored_tree_final.pdf", height = 13, width = 15)
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3) +
scale_color_manual(values = aes(c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442'))) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
(p3 <- p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/IAA) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
#scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic")))
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), values = aes(c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')), size=3) +
scale_color_manual(values = aes(c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442'))) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class, values = aes(c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442'))), size=3) +
scale_color_manual(values = aes(c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442'))) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3) +
scale_color_manual(values = aes(color=c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442'))) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3) +
scale_colour_manual(values = aes(c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442'))) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3) +
scale_colour_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
p4 <- p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
p4 + scale_colour_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) +
ggsave("figures/IAA_colored_tree_final.pdf", height = 13, width = 15)
p4 + scale_colour_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442'))
ggsave("figures/IAA_colored_tree_final.pdf", height = 13, width = 15)
tree <- treeio::read.mrbayes(file = "mb_results_mult/ARFmult_final.nex.con.tre")
g_tree <- ggtree(tree, layout="circular", branch.length = 'prob') + geom_tiplab(size=3, align = T)
setwd("~/GitHub/SoyArcs_manuscript/final_trees/ARF_input")
tree <- treeio::read.mrbayes(file = "mb_results_mult/ARFmult_final.nex.con.tre")
g_tree <- ggtree(tree, layout="circular", branch.length = 'prob') + geom_tiplab(size=3, align = T)
g_tree
# change tips according to Arabidopsis classification
names <- as.data.frame(tree@phylo[["tip.label"]])
IDs <- readxl::read_xlsx("../../Gm_GeneIDs.xlsx", sheet = "At_ARF")
IDs
IDs_classified <- readxl::read_xls("ARF_classes.xls")
IDs <- readxl::read_xlsx("../../Gm_GeneIDs.xlsx", sheet = "At_ARF")
IDs_classified <- readxl::read_xls("ARF_classes.xls")
left_join(IDs, IDs_classified, by=name)
IDs
merge(IDs, IDs_classified, by=name)
IDs_classified
merge(IDs, IDs_classified, by="name")
left_join(IDs, IDs_classified, by="name")
IDs_classified
IDs
merge(IDs, IDs_classified, by="name", all.y=T)
# We want to join annotated A. thaliana gene IDs with tip trees, and duplicate those who are not classified such as all the other species.
IDs$tair_locus <- ifelse(IDs$tair_locus=="AT5G62000",
paste0(IDs$tair_locus, ".2"), paste0(IDs$tair_locus,".1"))
TipLabel <- merge(x=names, y=IDs, by.x='tree@phylo[["tip.label"]]', by.y="tair_locus", all.x=T)
TipLabel
tipLabel <- TipLabel %>% dplyr::select(`tree@phylo[["tip.label"]]`, name, class) %>%
dplyr::rename(., tair_locus =`tree@phylo[["tip.label"]]`)
tipLabel <- within(tipLabel, name[is.na(name)] <- tair_locus[is.na(name)])
tipLabel
IDs <- merge(IDs, IDs_classified, by="name", all.y=T)
# We want to join annotated A. thaliana gene IDs with tip trees, and duplicate those who are not classified such as all the other species.
IDs$tair_locus <- ifelse(IDs$tair_locus=="AT5G62000",
paste0(IDs$tair_locus, ".2"), paste0(IDs$tair_locus,".1"))
IDs <- readxl::read_xlsx("../../Gm_GeneIDs.xlsx", sheet = "At_ARF")
IDs_classified <- readxl::read_xls("ARF_classes.xls")
IDs
IDs <- merge(IDs, IDs_classified, by="name", all.y=T)
# We want to join annotated A. thaliana gene IDs with tip trees, and duplicate those who are not classified such as all the other species.
IDs$tair_locus <- ifelse(IDs$tair_locus=="AT5G62000",
paste0(IDs$tair_locus, ".2"), paste0(IDs$tair_locus,".1"))
TipLabel <- merge(x=names, y=IDs, by.x='tree@phylo[["tip.label"]]', by.y="tair_locus", all.x=T)
tipLabel <- TipLabel %>% dplyr::select(`tree@phylo[["tip.label"]]`, name, class) %>%
dplyr::rename(., tair_locus =`tree@phylo[["tip.label"]]`)
tipLabel <- within(tipLabel, name[is.na(name)] <- tair_locus[is.na(name)])
tipLabel
TipLabel
IDs_classified
IDs <- merge(IDs, IDs_classified, by="name", all.y=T)
IDs
tipLabel <- TipLabel %>% dplyr::select(`tree@phylo[["tip.label"]]`, name, Class=Class.x) %>%
dplyr::rename(., tair_locus =`tree@phylo[["tip.label"]]`)
tipLabel <- TipLabel %>% dplyr::select(`tree@phylo[["tip.label"]]`, name, Class.x=Class) %>%
dplyr::rename(., tair_locus =`tree@phylo[["tip.label"]]`)
tipLabel <- TipLabel %>% dplyr::select(`tree@phylo[["tip.label"]]`, name, Class.x = Class) %>%
dplyr::rename(., tair_locus =`tree@phylo[["tip.label"]]`)
TipLabel <- merge(x=names, y=IDs, by.x='tree@phylo[["tip.label"]]', by.y="tair_locus", all.x=T)
tipLabel <- TipLabel %>% dplyr::select(`tree@phylo[["tip.label"]]`, name, Class.x = Class) %>%
dplyr::rename(., tair_locus =`tree@phylo[["tip.label"]]`)
tipLabel <- TipLabel %>% dplyr::select(`tree@phylo[["tip.label"]]`, name, Class=Class.x ) %>%
dplyr::rename(., tair_locus =`tree@phylo[["tip.label"]]`)
tipLabel <- TipLabel %>% dplyr::select(`tree@phylo[["tip.label"]]`, name, Class=Class.x ) %>%
dplyr::rename(., tair_locus =`tree@phylo[["tip.label"]]`)
tipLabel <- TipLabel %>% dplyr::select(`tree@phylo[["tip.label"]]`, name, Class.x) %>%
dplyr::rename(., tair_locus =`tree@phylo[["tip.label"]]`, Class=Class.x)
TipLabel
TipLabel <- merge(x=names, y=IDs, by.x='tree@phylo[["tip.label"]]', by.y="tair_locus", all.x=T)
IDs <- merge(IDs, IDs_classified, by="name", all.y=T)
# We want to join annotated A. thaliana gene IDs with tip trees, and duplicate those who are not classified such as all the other species.
IDs$tair_locus <- ifelse(IDs$tair_locus=="AT5G62000",
paste0(IDs$tair_locus, ".2"), paste0(IDs$tair_locus,".1"))
IDs
merge(x=names, y=IDs, by.x='tree@phylo[["tip.label"]]', by.y="tair_locus", all.x=T)
merge(x=names, y=IDs, by.x='tree@phylo[["tip.label"]]', by.y="tair_locus", all.y=T)
# change tips according to Arabidopsis classification
names <- as.data.frame(tree@phylo[["tip.label"]])
IDs <- readxl::read_xlsx("../../Gm_GeneIDs.xlsx", sheet = "At_ARF")
IDs
# We want to join annotated A. thaliana gene IDs with tip trees, and duplicate those who are not classified such as all the other species.
IDs$tair_locus <- ifelse(IDs$tair_locus=="AT5G62000",
paste0(IDs$tair_locus, ".2"), paste0(IDs$tair_locus,".1"))
TipLabel <- merge(x=names, y=IDs, by.x='tree@phylo[["tip.label"]]', by.y="tair_locus", all.x=T)
tipLabel <- TipLabel %>% dplyr::select(`tree@phylo[["tip.label"]]`, name, Class.x) %>%
dplyr::rename(., tair_locus =`tree@phylo[["tip.label"]]`, class)
tipLabel <- TipLabel %>% dplyr::select(`tree@phylo[["tip.label"]]`, name, class) %>%
dplyr::rename(., tair_locus =`tree@phylo[["tip.label"]]`, class)
TipLabel
tipLabel <- TipLabel %>% dplyr::select(`tree@phylo[["tip.label"]]`, name, class) %>%
dplyr::rename(., tair_locus =`tree@phylo[["tip.label"]]`, class)
TipLabel <- merge(x=names, y=IDs, by.x='tree@phylo[["tip.label"]]', by.y="tair_locus", all.x=T)
tipLabel <- TipLabel %>% dplyr::select(`tree@phylo[["tip.label"]]`, name, class) %>%
dplyr::rename(., tair_locus =`tree@phylo[["tip.label"]]`, class)
tipLabel <- TipLabel %>% dplyr::select(`tree@phylo[["tip.label"]]`, name, class) %>%
dplyr::rename(., tair_locus =`tree@phylo[["tip.label"]]`, Class=class)
tipLabel <- within(tipLabel, name[is.na(name)] <- tair_locus[is.na(name)])
#change tree tip.label
tree@phylo[["tip.label"]] <- tipLabel[[2]][match(tree@phylo[["tip.label"]], tipLabel[[1]])]
ggtree(tree, layout="circular", branch.length = 'prob') + geom_tiplab(size=3, align = T)
# Colour *Malus domestica* genes
IDs <- tipLabel %>%
dplyr::select(tair_locus, name, class) %>%
dplyr::mutate( Species = tair_locus )
ggtree(tree, layout="circular", branch.length = 'prob') + geom_tiplab(size=3, align = T)
# Colour *Malus domestica* genes
IDs <- tipLabel %>%
dplyr::select(tair_locus, name, class) %>%
dplyr::mutate( Species = tair_locus )
# Colour *Malus domestica* genes
IDs <- tipLabel %>%
dplyr::select(tair_locus, name, Class) %>%
dplyr::mutate( Species = tair_locus )
IDs$Species <- IDs$Species %>%
gsub("^AT(.*)", "A. thaliana", .) %>%
gsub("^Medtr(.*)", "M. truncatula", .)  %>%
gsub("^Glyma(.*)", "G. max", .) %>% gsub("^Glyso(.*)", "G. soja", .) %>%
gsub("^Lj(.*)", "L. japonicus", .)
# write_csv(IDs, "ARF_Tip_Label.csv")
IDs <-read_csv("ARF_Tip_Label.csv")
IDs
# Colour *Malus domestica* genes
IDs <- tipLabel %>%
dplyr::select(tair_locus, name, Class) %>%
dplyr::mutate( Species = tair_locus )
IDs$Species <- IDs$Species %>%
gsub("^AT(.*)", "A. thaliana", .) %>%
gsub("^Medtr(.*)", "M. truncatula", .)  %>%
gsub("^Glyma(.*)", "G. max", .) %>% gsub("^Glyso(.*)", "G. soja", .) %>%
gsub("^Lj(.*)", "L. japonicus", .)
write_csv(IDs, "ARF_Tip_Label.csv")
IDs <-read_csv("ARF_Tip_Label.csv")
IDs_classified <- readxl::read_xls("ARF_classes.xls")
IDs
IDs_classified
IDs
merge(IDs, IDs_classified, by=name, all.y=T )
merge(IDs, IDs_classified, by='name', all.y=T )
IDs <- merge(IDs, IDs_classified, by='name', all.y=T )
tipLabel <- IDs[,-3]
IDs <-read_csv("ARF_Tip_Label.csv")
IDs_classified <- readxl::read_xls("ARF_classes.xls")
IDs <- merge(IDs, IDs_classified, by='name', all.y=T )
IDs
IDs %>% select(., name, tair_locus, Species, `ARF Class`=Class)
IDs %>% dplyr::select(., name, tair_locus, Species, `ARF Class`=Class)
IDs %>% dplyr::select(., name, tair_locus, Species, `ARF Class`)
IDs %>% dplyr::select(., name, tair_locus, Species, Class=`ARF Class`)
tipLabel <- IDs %>% dplyr::select(., name, tair_locus, Species, Class=`ARF Class`)
tipLabel %>% select()
p <- ggtree(tree, layout="circular",  color = "darkgrey",
branch.length='prob', ladderize = TRUE) +
scale_x_continuous(expand = c(0, 1.2)) +
geom_nodelab(mapping = aes(label=round(
as.numeric(prob), digits = 2), fontface=2),
nudge_x = -.1, nudge_y = .1, hjust = -.05, size = 1.5)
p
(p2 <- p %<+% tipLabel +
geom_tippoint(aes(fill=factor(Species)),
size=3.5, shape=21) + geom_tiplab( size=3, hjust=-.1, align = T) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species"))
)
(p2 <- p %<+% tipLabel +
geom_tippoint(aes(fill=factor(Species)),
size=3.5, shape=21) + geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species"))
)
tipLabel <- tipLabel %>%
dplyr::mutate(tip_color = ifelse(str_detect(name, "At", negate = TRUE), "TO_not", name))
tipLabel2 <- tipLabel %>%
mutate(tip_color = ifelse(str_detect(tip_color, "At", negate = FALSE), "TO_color", tip_color))
p %<+% tipLabel2 +
geom_tiplab(aes(color = factor(tip_color)), size=3, hjust=-.15) +
scale_color_manual(values = c("red", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=4.2, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
#without tips aligned
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.15, fontface=2) + #subset tree in order to get classified (TIR1/ARF) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.15) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
# add node number so we can label the classes within arfs
ggtree(tree, layout="circular",  color = "darkgrey",
branch.length='prob', ladderize = TRUE) + geom_tiplab(align = T)+
geom_text(aes(label=node), size=2, hjust=-.3, color="red", fontface=2) +
scale_x_continuous(expand = c(0, 1.2)) +
geom_nodelab(mapping = aes(label=round(
as.numeric(prob), digits = 2), fontface=2),
nudge_x = -.1, nudge_y = .1, hjust = -.05, size = 1.5)
# Tree with aligned tips
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/ARF) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/ARF) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_strip("AtARF17" , "Glyma.12G174100.1", barsize=1.5, color='#08519c', label = "Class C", angle=-45, offset.text = 1, offset = 10.5) +
geom_strip("AtARF5" , "Glyma.08G100100.3", barsize=1.5, color='#6baed6', label = "Class A", angle=65, offset.text = 1, offset = 10.5) +
geom_strip("AtARF4" , "Glyma.01G103500.1", barsize=1.5, color='#3182bd', label = "Class B", angle=20, offset.text = 1, offset = 10.5) +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) + theme(legend.text = element_text(face = "italic"))
# Now I will also add the ARFs class
p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T) + #subset tree in order to get classified (TIR1/ARF) tips in bold
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point2(aes(subset=(node==185)), shape=1, size=9, fill="red") +
geom_point2(aes(subset=(node==239)), shape=6, size=9) +
geom_point2(aes(subset=(node==181)), shape=5, size=9) +
geom_point2(aes(subset=(node==177)), shape=5, size=9) +
geom_point2(aes(subset=(node==336)), shape=5, size=9) +
geom_point2(aes(subset=(node==308)), shape=5, size=9) +
scale_color_manual(values = c("goldenrod4", "#000000"), guide='none') +
geom_tippoint(aes(fill=factor(Species)),
size=3, shape=21) + #geom_tiplab( size=3, hjust=-.15) +
scale_fill_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442')) + #COLORS FROM GGTHEMES COLORBLIND PALLETE
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1))
p4 <- p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
p4 + scale_colour_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442'))
p4 <- p %<+% filter(!is.na(tipLabel2)) +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
filter(!is.na(tipLabel2))
tipLabel2
p4 <- p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1), na.rm=TRUE) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
p4 + scale_colour_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442'))
p4 <- p %<+% tipLabel2 +
geom_tiplab(aes(subset=tip_color == "TO_color"), size=3, hjust=-.01, fontface=2, align = T ) +
geom_tiplab(aes(subset=tip_color == "TO_not"), colour='black', size=3, hjust=-.01, align = T) +
geom_point(aes( color=Species, shape=Class), size=3, na.rm=TRUE) +
guides(fill=guide_legend(title="Species")) + theme(legend.position = c(1,0.1)) +
theme(legend.text = element_text(face = "italic")) +
scale_colour_discrete(na.translate = F)
p4 + scale_colour_manual(values = c('#000000', '#E69F00', '#56B4E9', '#009E73', '#F0E442'))
ggsave("figures/ARF_Class5_colored_tree.pdf", height = 13, width = 15)
